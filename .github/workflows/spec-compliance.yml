name: 技術仕様書整合性チェック

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  spec-compliance:
    runs-on: ubuntu-latest
    
    steps:
    - name: リポジトリをチェックアウト
      uses: actions/checkout@v4
      
    - name: Python 3.8をセットアップ
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: 依存関係をインストール
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 技術仕様書整合性チェック
      run: |
        python scripts/check_spec_compliance.py
        
    - name: テスト実行
      run: |
        python -m pytest tests/ --maxfail=3 --disable-warnings -v
        
    - name: 型チェック
      run: |
        mypy modules/ --no-error-summary
        
    - name: 必須ファイル存在確認
      run: |
        if [ ! -f "技術仕様書_関数・ファイルパス一覧.md" ]; then
          echo "❌ 技術仕様書が見つかりません"
          exit 1
        fi
        if [ ! -f "AI_REFERENCE_GUIDE.md" ]; then
          echo "❌ AI参照ガイドが見つかりません"
          exit 1
        fi
        if [ ! -f "ToDoリスト.md" ]; then
          echo "❌ ToDoリストが見つかりません"
          exit 1
        fi
        echo "✅ 必須ファイルの存在確認完了"
        
    - name: コード品質チェック
      run: |
        # 相対パスの使用チェック
        if grep -r "from \." modules/; then
          echo "❌ 相対パスの使用が検出されました"
          exit 1
        fi
        
        # 重要な関数名の変更チェック
        if grep -r "def TagManagerApp" modules/; then
          echo "⚠️  TagManagerAppクラスが変更されました"
        fi
        
        echo "✅ コード品質チェック完了"
        
  test-coverage:
    runs-on: ubuntu-latest
    needs: spec-compliance
    
    steps:
    - name: リポジトリをチェックアウト
      uses: actions/checkout@v4
      
    - name: Python 3.8をセットアップ
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: 依存関係をインストール
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov
        
    - name: テストカバレッジ実行
      run: |
        python -m pytest tests/ --cov=modules --cov-report=html --cov-report=term-missing
        
    - name: カバレッジレポートをアップロード
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: htmlcov/
        
    - name: カバレッジバッジを更新
      run: |
        echo "📊 テストカバレッジ: $(python -m pytest tests/ --cov=modules --cov-report=term-missing | grep TOTAL | awk '{print $4}')"
        
  security-check:
    runs-on: ubuntu-latest
    needs: spec-compliance
    
    steps:
    - name: リポジトリをチェックアウト
      uses: actions/checkout@v4
      
    - name: Python 3.8をセットアップ
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: セキュリティチェック
      run: |
        pip install bandit safety
        
        # セキュリティ脆弱性チェック
        bandit -r modules/ -f json -o bandit-report.json || true
        
        # 依存関係の脆弱性チェック
        safety check || true
        
        echo "✅ セキュリティチェック完了"
        
    - name: セキュリティレポートをアップロード
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: bandit-report.json 